<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on fordawn - a person blog</title><link>http://localhost:1313/post/</link><description>Recent content in Posts on fordawn - a person blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>fordawn</copyright><lastBuildDate>Wed, 31 Mar 2021 16:58:12 +0800</lastBuildDate><atom:link href="http://localhost:1313/post/index.xml" rel="self" type="application/rss+xml"/><item><title>使用GitHub Action 自动发布</title><link>http://localhost:1313/post/2021/%E4%BD%BF%E7%94%A8github-action-%E8%87%AA%E5%8A%A8%E5%8F%91%E5%B8%83/</link><pubDate>Wed, 31 Mar 2021 16:58:12 +0800</pubDate><guid>http://localhost:1313/post/2021/%E4%BD%BF%E7%94%A8github-action-%E8%87%AA%E5%8A%A8%E5%8F%91%E5%B8%83/</guid><description>迁移到 github pages 以后，还会面临一个问题，就是 pages 其实只需要 hugo 生成的 public 目录下的内容，但是我们也需要找一个地方存储 hugo 的程序，和原始的文章，这样我们就需要</description></item><item><title>如何关掉一个API</title><link>http://localhost:1313/post/2021/%E5%A6%82%E4%BD%95%E5%85%B3%E6%8E%89%E4%B8%80%E4%B8%AAapi/</link><pubDate>Sat, 20 Feb 2021 18:11:44 +0800</pubDate><guid>http://localhost:1313/post/2021/%E5%A6%82%E4%BD%95%E5%85%B3%E6%8E%89%E4%B8%80%E4%B8%AAapi/</guid><description>天下没有不散的宴席，无论你的 API 现在有多棒，总有一天你会想要发布一个全新的。而且新的API会与旧的API有些不兼容，可能是换了新的地址，也可能</description></item><item><title>迁移到 github pages</title><link>http://localhost:1313/post/2021/%E8%BF%81%E7%A7%BB%E5%88%B0githubpages/</link><pubDate>Mon, 08 Feb 2021 15:37:12 +0800</pubDate><guid>http://localhost:1313/post/2021/%E8%BF%81%E7%A7%BB%E5%88%B0githubpages/</guid><description>这两天把博客从服务器迁移到了 github pages，这样以后就不用自己配置服务器、维护证书了，而且通过几年的观察，发现服务器并不是那么稳定，偶尔还是会</description></item><item><title>迁移到hugo</title><link>http://localhost:1313/post/2020/migrating-to-hugo/</link><pubDate>Fri, 25 Sep 2020 16:25:21 +0800</pubDate><guid>http://localhost:1313/post/2020/migrating-to-hugo/</guid><description>换到hugo 今天，把博客的程序迁移到了hugo，尝试一下静态网页。 从一开始的wp，到自己写了一套前端后端，到现在hugo，没想到一转眼已经过</description></item><item><title>如何写一个Spring Boot Filter</title><link>http://localhost:1313/post/2020/%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AAspring-boot-filter/</link><pubDate>Wed, 26 Aug 2020 07:56:32 +0000</pubDate><guid>http://localhost:1313/post/2020/%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AAspring-boot-filter/</guid><description>1. 总览 在本快速教程中，我们将探索如何在Spring Boot的帮助下定义自定义过滤器并指定其调用顺序。 2. 定义过滤器和调用顺序 让我们从创建两个过</description></item><item><title>maven的标准目录结构</title><link>http://localhost:1313/post/2020/maven%E7%9A%84%E6%A0%87%E5%87%86%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84/</link><pubDate>Thu, 06 Aug 2020 10:35:24 +0000</pubDate><guid>http://localhost:1313/post/2020/maven%E7%9A%84%E6%A0%87%E5%87%86%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84/</guid><description>maven 是构建 java 项目最常用的工具之一，熟悉 maven 推荐的目录结构，可以更快更好的上手一个 maven 项目。 目录 含义 src/main/java Application/Library sources src/main/resources Application/Library resources src/main/filters Resource filter files src/main/webapp Web application sources src/test/java Test sources src/test/resources Test resources src/test/filters Test resource filter</description></item><item><title>5个webflux新手常见的问题</title><link>http://localhost:1313/post/2020/5%E4%B8%AAwebflux%E6%96%B0%E6%89%8B%E5%B8%B8%E8%A7%81%E7%9A%84%E9%97%AE%E9%A2%98/</link><pubDate>Wed, 22 Jul 2020 15:41:35 +0000</pubDate><guid>http://localhost:1313/post/2020/5%E4%B8%AAwebflux%E6%96%B0%E6%89%8B%E5%B8%B8%E8%A7%81%E7%9A%84%E9%97%AE%E9%A2%98/</guid><description>这篇文章是基于对使用 spring webflux 编写代码的仓库的观察。 在正确的时间，使用正确的工具，用正确的方式，去处理正确的工作。 Spring webflux 是一个用于提供响应式编程能力</description></item><item><title>在 typora 中使用 uPic 保存图片</title><link>http://localhost:1313/post/2020/%E5%9C%A8-typora-%E4%B8%AD%E4%BD%BF%E7%94%A8-upic-%E4%BF%9D%E5%AD%98%E5%9B%BE%E7%89%87/</link><pubDate>Sun, 19 Jul 2020 09:22:29 +0000</pubDate><guid>http://localhost:1313/post/2020/%E5%9C%A8-typora-%E4%B8%AD%E4%BD%BF%E7%94%A8-upic-%E4%BF%9D%E5%AD%98%E5%9B%BE%E7%89%87/</guid><description>在写作的过程中，插入图片是不可避免的事情，这样才能写出图文并茂的文章。 在使用一些博客服务，或者使用笔记程序时，一般都会提供上传图片的功能，保</description></item><item><title>如何拥有一个炫酷的 GitHub 主页</title><link>http://localhost:1313/post/2020/%E5%A6%82%E4%BD%95%E6%8B%A5%E6%9C%89%E4%B8%80%E4%B8%AA%E7%82%AB%E9%85%B7%E7%9A%84-github-%E4%B8%BB%E9%A1%B5/</link><pubDate>Wed, 15 Jul 2020 14:25:16 +0000</pubDate><guid>http://localhost:1313/post/2020/%E5%A6%82%E4%BD%95%E6%8B%A5%E6%9C%89%E4%B8%80%E4%B8%AA%E7%82%AB%E9%85%B7%E7%9A%84-github-%E4%B8%BB%E9%A1%B5/</guid><description>身为一名程序员，github肯定不会陌生，主页里那些东西也早已熟知，无非是设置几个展示的项目，和打卡一样的提交记录。但是！现在github有</description></item><item><title>Swagger response 里展示 DeferredResult 的泛型类</title><link>http://localhost:1313/post/2020/swagger-response-%E9%87%8C%E5%B1%95%E7%A4%BA-deferredresult-%E7%9A%84%E6%B3%9B%E5%9E%8B%E7%B1%BB/</link><pubDate>Sun, 14 Jun 2020 07:30:53 +0000</pubDate><guid>http://localhost:1313/post/2020/swagger-response-%E9%87%8C%E5%B1%95%E7%A4%BA-deferredresult-%E7%9A%84%E6%B3%9B%E5%9E%8B%E7%B1%BB/</guid><description>swagger swagger 是一款常用的生成 api 文档的工具，可以非常好的与 spring boot 结合使用。配合各种注解，可以非常完善的展示 api 的各种信息。不过现在使用多线程获取数据以后，</description></item><item><title>ListenableFurure 的一般使用</title><link>http://localhost:1313/post/2020/listenablefurure-%E7%9A%84%E4%B8%80%E8%88%AC%E4%BD%BF%E7%94%A8/</link><pubDate>Sun, 10 May 2020 14:29:02 +0000</pubDate><guid>http://localhost:1313/post/2020/listenablefurure-%E7%9A%84%E4%B8%80%E8%88%AC%E4%BD%BF%E7%94%A8/</guid><description>说到java，就不得不说起多线程的使用，在 java8 的时代，可以使用多线程的方式已经非常多了，这里主要记录一下 ListenableFurure 的使用。 ListenableFurure 是guava库中的一员，主</description></item><item><title>What Good Sleepers Don’t Do</title><link>http://localhost:1313/post/2019/what-good-sleepers-dont-do/</link><pubDate>Sun, 08 Dec 2019 15:44:51 +0000</pubDate><guid>http://localhost:1313/post/2019/what-good-sleepers-dont-do/</guid><description>https://forge.medium.com/what-good-sleepers-dont-do-25655327fb60 如果您以某种方式确定了世界上最放松的100个人，将他们全都围起来，并询问他们如何才能获得如此始终如一的出色睡眠，您可能会惊讶地走开，并且有</description></item><item><title>diagnosticd 进程突然占用很多cpu的解决方案</title><link>http://localhost:1313/post/2019/diagnosticd-%E8%BF%9B%E7%A8%8B%E7%AA%81%E7%84%B6%E5%8D%A0%E7%94%A8%E5%BE%88%E5%A4%9Acpu%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link><pubDate>Thu, 08 Aug 2019 02:35:56 +0000</pubDate><guid>http://localhost:1313/post/2019/diagnosticd-%E8%BF%9B%E7%A8%8B%E7%AA%81%E7%84%B6%E5%8D%A0%E7%94%A8%E5%BE%88%E5%A4%9Acpu%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid><description>今天早上打开电脑的时候，发现风扇在疯狂转动。肯定是什么进程占用了大量的cpu。 打开monitor，发现了一个叫做diagnosticd的进程</description></item><item><title>在docker中运行mysql</title><link>http://localhost:1313/post/2019/%E5%9C%A8docker%E4%B8%AD%E8%BF%90%E8%A1%8Cmysql/</link><pubDate>Wed, 24 Jul 2019 11:50:38 +0000</pubDate><guid>http://localhost:1313/post/2019/%E5%9C%A8docker%E4%B8%AD%E8%BF%90%E8%A1%8Cmysql/</guid><description>在docker越来越流行的今天，身为一名开发人员，也要跟上节奏。 用docker来模拟环境，切换环境都非常方便，今天我们先把mysql用doc</description></item><item><title>logback template</title><link>http://localhost:1313/post/2019/logback-template/</link><pubDate>Thu, 04 Jul 2019 07:34:49 +0000</pubDate><guid>http://localhost:1313/post/2019/logback-template/</guid><description>一些logback.xml 文件的模板 简介 spring boot 2 默认带有logback，可以在resources 目录下新建文件 logback.xml 或者 logback-spring.xml 来进行配置。 1.写到控制</description></item><item><title>2018回望</title><link>http://localhost:1313/post/2019/2018%E5%9B%9E%E6%9C%9B/</link><pubDate>Mon, 11 Feb 2019 06:43:02 +0000</pubDate><guid>http://localhost:1313/post/2019/2018%E5%9B%9E%E6%9C%9B/</guid><description>风华正茂 不知道咋会想起来这么一个词，但是我想以后写总结的时候都带一个当时从脑袋里奔腾而出的词。 是计划好，还是随缘好。 首先，这篇文章是在我连续</description></item><item><title>15. 三数之和</title><link>http://localhost:1313/post/2019/15.-%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/</link><pubDate>Mon, 14 Jan 2019 07:24:54 +0000</pubDate><guid>http://localhost:1313/post/2019/15.-%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/</guid><description>problem 给定一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？找出所有满足条件且不重复的三元组。 注意：答案中</description></item><item><title>批量替换文本中的字符串</title><link>http://localhost:1313/post/2018/%E6%89%B9%E9%87%8F%E6%9B%BF%E6%8D%A2%E6%96%87%E6%9C%AC%E4%B8%AD%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2/</link><pubDate>Sun, 02 Dec 2018 09:40:42 +0000</pubDate><guid>http://localhost:1313/post/2018/%E6%89%B9%E9%87%8F%E6%9B%BF%E6%8D%A2%E6%96%87%E6%9C%AC%E4%B8%AD%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid><description>perl 替换 1 2 3 4 5 6 7 -a 自动分隔模式，用空格分隔$_并保存到@F中。相当于@F = split ”。分隔符可以使用-F参数指定 -F 指定-a的分隔符，可以使用正</description></item><item><title>139. Word Break</title><link>http://localhost:1313/post/2018/139.-word-break/</link><pubDate>Mon, 10 Sep 2018 07:53:47 +0000</pubDate><guid>http://localhost:1313/post/2018/139.-word-break/</guid><description>problem Given a non-empty string s and a dictionary wordDict containing a list of non-empty words, determine if s can be segmented into a space-separated sequence of one or more dictionary words. Note: The same word in the dictionary may be reused multiple times in the segmentation. You may assume the dictionary does not contain duplicate words. Example 1: Input: s = &amp;ldquo;leetcode&amp;rdquo;, wordDict = [&amp;ldquo;leet&amp;rdquo;, &amp;ldquo;code&amp;rdquo;] Output: true Explanation:</description></item><item><title>找出系统瓶颈的利器 -- sar</title><link>http://localhost:1313/post/2018/%E6%89%BE%E5%87%BA%E7%B3%BB%E7%BB%9F%E7%93%B6%E9%A2%88%E7%9A%84%E5%88%A9%E5%99%A8-sar/</link><pubDate>Wed, 29 Aug 2018 06:56:36 +0000</pubDate><guid>http://localhost:1313/post/2018/%E6%89%BE%E5%87%BA%E7%B3%BB%E7%BB%9F%E7%93%B6%E9%A2%88%E7%9A%84%E5%88%A9%E5%99%A8-sar/</guid><description>sar是System Activity Reporter（系统活动情况报告）的缩写。 sar工具将对系统当前的状态进行取样，然后通过计算数据和比例来表达系统的当</description></item><item><title>laravel 框架扩展 Auth 认证，实现自定义 driver，guard</title><link>http://localhost:1313/post/2018/laravel-%E6%A1%86%E6%9E%B6%E6%89%A9%E5%B1%95-auth-%E8%AE%A4%E8%AF%81%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%AE%9A%E4%B9%89-driverguard/</link><pubDate>Wed, 20 Jun 2018 11:51:48 +0000</pubDate><guid>http://localhost:1313/post/2018/laravel-%E6%A1%86%E6%9E%B6%E6%89%A9%E5%B1%95-auth-%E8%AE%A4%E8%AF%81%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%AE%9A%E4%B9%89-driverguard/</guid><description>起 最近研究 laravel 自带的认证，发现使用token认证方式的话，默认传值字段和数据库中字段名都是api_token，这让我很不爽，laravel 这样</description></item><item><title>学习了一下vue</title><link>http://localhost:1313/post/2018/%E5%AD%A6%E4%B9%A0%E4%BA%86%E4%B8%80%E4%B8%8Bvue/</link><pubDate>Sat, 16 Jun 2018 12:20:23 +0000</pubDate><guid>http://localhost:1313/post/2018/%E5%AD%A6%E4%B9%A0%E4%BA%86%E4%B8%80%E4%B8%8Bvue/</guid><description>起 博客每篇文章都有一个分类，有的时候，写着写着才发现没有建分类，这个时候只能保存一下草稿，出去创建分类，然后再回来继续写文章。对我这种本身就</description></item><item><title>记一次神奇的http400错误</title><link>http://localhost:1313/post/2018/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%A5%9E%E5%A5%87%E7%9A%84http400%E9%94%99%E8%AF%AF/</link><pubDate>Mon, 21 May 2018 03:40:22 +0000</pubDate><guid>http://localhost:1313/post/2018/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%A5%9E%E5%A5%87%E7%9A%84http400%E9%94%99%E8%AF%AF/</guid><description>最近在工作中遇到了一次神奇的http400事情，记录一下。 起因 由于项目架构要求，需要开发一个proxy服务，用来统一转发外部的请求给后端服务</description></item><item><title>linux下的日志管理软件--logrotate</title><link>http://localhost:1313/post/2018/linux%E4%B8%8B%E7%9A%84%E6%97%A5%E5%BF%97%E7%AE%A1%E7%90%86%E8%BD%AF%E4%BB%B6-logrotate/</link><pubDate>Wed, 16 May 2018 09:32:08 +0000</pubDate><guid>http://localhost:1313/post/2018/linux%E4%B8%8B%E7%9A%84%E6%97%A5%E5%BF%97%E7%AE%A1%E7%90%86%E8%BD%AF%E4%BB%B6-logrotate/</guid><description>简介 我们经常在日志中记录一些事件的信息，以便于出现问题时的排查，性能的分析等。在没有任何处理的情况下，日志文件是无限增长的，这对磁盘的消耗是</description></item><item><title>搭建git服务器&amp;部署钩子</title><link>http://localhost:1313/post/2018/%E6%90%AD%E5%BB%BAgit%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2%E9%92%A9%E5%AD%90/</link><pubDate>Sat, 12 May 2018 09:34:53 +0000</pubDate><guid>http://localhost:1313/post/2018/%E6%90%AD%E5%BB%BAgit%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2%E9%92%A9%E5%AD%90/</guid><description>一般我们在写好文档后，会生成一份apidoc发给前端同学，好让前端同学了解接口格式，进行开发。一直以来，我都是在本机搭建了一个服务器，让其他</description></item><item><title>test</title><link>http://localhost:1313/post/2018/test/</link><pubDate>Wed, 11 Apr 2018 11:30:03 +0000</pubDate><guid>http://localhost:1313/post/2018/test/</guid><description>lily</description></item><item><title>191. Number of 1 Bits</title><link>http://localhost:1313/post/2018/191.-number-of-1-bits/</link><pubDate>Tue, 03 Apr 2018 17:04:18 +0000</pubDate><guid>http://localhost:1313/post/2018/191.-number-of-1-bits/</guid><description>Problem Write a function that takes an unsigned integer and returns the number of ’1' bits it has (also known as the Hamming weight). For example, the 32-bit integer ’11' has binary representation 00000000000000000000000000001011, so the function should return 3. Remark 这个题总归还是很简单的。 1 2 3 4 5 6 7 8 9 10 11 12</description></item><item><title>338. Counting Bits</title><link>http://localhost:1313/post/2018/338.-counting-bits/</link><pubDate>Sat, 31 Mar 2018 18:09:51 +0000</pubDate><guid>http://localhost:1313/post/2018/338.-counting-bits/</guid><description>Problem Given a non negative integer number num. For every numbers i in the range 0 ≤ i ≤ num calculate the number of 1&amp;rsquo;s in their binary representation and return them as an array. Example: For num = 5 you should return [0,1,1,2,1,2]. Follow up: It is very easy to come up with a solution with run time O(n*sizeof(integer)). But can you do it in linear time O(n) /possibly</description></item><item><title>php 7.2小记</title><link>http://localhost:1313/post/2018/php-7.2%E5%B0%8F%E8%AE%B0/</link><pubDate>Fri, 23 Feb 2018 17:13:50 +0000</pubDate><guid>http://localhost:1313/post/2018/php-7.2%E5%B0%8F%E8%AE%B0/</guid><description>新的类型 - 对象 A new type, object, has been introduced that can be used for (contravariant) parameter typing and (covariant) return typing of any objects. 以上是官方解释，出现了两个没什么印象的词 - 逆变和协变，查一下引出了里氏替换，之后又</description></item><item><title>2017年终总结</title><link>http://localhost:1313/post/2018/2017%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/</link><pubDate>Sat, 27 Jan 2018 16:29:06 +0000</pubDate><guid>http://localhost:1313/post/2018/2017%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/</guid><description>谁无暴风劲雨时，守得云开见月明。 花开复见却飘零，残憾莫使今生留。 &amp;mdash;《水浒传》 年终总结有什么用呢，大概是一份回忆吧，所以也来一篇迟</description></item><item><title>53. Maximum Subarray</title><link>http://localhost:1313/post/2018/53.-maximum-subarray/</link><pubDate>Wed, 10 Jan 2018 15:40:21 +0000</pubDate><guid>http://localhost:1313/post/2018/53.-maximum-subarray/</guid><description>problem Find the contiguous subarray within an array (containing at least one number) which has the largest sum. For example, given the array [-2,1,-3,4,-1,2,1,-5,4], the contiguous subarray [4,-1,2,1] has the largest sum = 6. solution 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 class</description></item><item><title>747. Min Cost Climbing Stairs</title><link>http://localhost:1313/post/2017/747.-min-cost-climbing-stairs/</link><pubDate>Fri, 29 Dec 2017 11:39:38 +0000</pubDate><guid>http://localhost:1313/post/2017/747.-min-cost-climbing-stairs/</guid><description>problem On a staircase, the i-th step has some non-negative cost cost[i] assigned (0 indexed). Once you pay the cost, you can either climb one or two steps. You need to find minimum cost to reach the top of the floor, and you can either start from the step with index 0, or the step with index 1. cost will have a length in the range [2, 1000]. Every cost[i]</description></item><item><title>supervisor 初步使用</title><link>http://localhost:1313/post/2017/supervisor-%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8/</link><pubDate>Sat, 16 Dec 2017 16:50:20 +0000</pubDate><guid>http://localhost:1313/post/2017/supervisor-%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8/</guid><description>Linux的后台进程运行有好几种方法，例如nohup，screen等，但是，如果是一个服务程序，要可靠地在后台运行，我们就需要把它做成dae</description></item><item><title>CentOS 常用操作</title><link>http://localhost:1313/post/2017/centos-%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</link><pubDate>Sat, 02 Dec 2017 18:03:40 +0000</pubDate><guid>http://localhost:1313/post/2017/centos-%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</guid><description>初始化 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 yum update # 升级 yum grouplist | grep development yum groupinstall &amp;#34;Development Tools&amp;#34; # 安装常用工具 # 添加用户 adduser deploy passwd deploy usermod -a -G wheel deploy</description></item><item><title>纪念 丹尼斯·里奇</title><link>http://localhost:1313/post/2017/%E7%BA%AA%E5%BF%B5-%E4%B8%B9%E5%B0%BC%E6%96%AF%E9%87%8C%E5%A5%87/</link><pubDate>Thu, 30 Nov 2017 15:38:27 +0000</pubDate><guid>http://localhost:1313/post/2017/%E7%BA%AA%E5%BF%B5-%E4%B8%B9%E5%B0%BC%E6%96%AF%E9%87%8C%E5%A5%87/</guid><description>it&amp;rsquo;s now or never 很早就想写一些纪念性质的文章，纪念那些我尊敬的、已经逝去人，一来写文章必然要去找资料，让自己能够更加了解前辈们，二来将想法落在文字上</description></item><item><title>198. House Robber</title><link>http://localhost:1313/post/2017/198.-house-robber/</link><pubDate>Sat, 11 Nov 2017 16:40:46 +0000</pubDate><guid>http://localhost:1313/post/2017/198.-house-robber/</guid><description>Question You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security system connected and it will automatically contact the police if two adjacent houses were broken into on the same night. Given a list of non-negative integers representing the amount of money of</description></item><item><title>php 的安装</title><link>http://localhost:1313/post/2017/php-%E7%9A%84%E5%AE%89%E8%A3%85/</link><pubDate>Thu, 12 Oct 2017 14:48:01 +0000</pubDate><guid>http://localhost:1313/post/2017/php-%E7%9A%84%E5%AE%89%E8%A3%85/</guid><description>1 ./configure --prefix=/usr/local/php5_6_31 --enable-mysqlnd --enable-fpm --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --enable-mbstring --enable-bcmath --with-openssl=/usr/local/opt/openssl --with-curl</description></item><item><title>观影记录</title><link>http://localhost:1313/post/2017/%E8%A7%82%E5%BD%B1%E8%AE%B0%E5%BD%95/</link><pubDate>Sat, 07 Oct 2017 17:51:44 +0000</pubDate><guid>http://localhost:1313/post/2017/%E8%A7%82%E5%BD%B1%E8%AE%B0%E5%BD%95/</guid><description>视频通关 古墓丽影：崛起 —2017.10.7</description></item><item><title>常用软件记录</title><link>http://localhost:1313/post/2017/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E8%AE%B0%E5%BD%95/</link><pubDate>Fri, 06 Oct 2017 19:33:49 +0000</pubDate><guid>http://localhost:1313/post/2017/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E8%AE%B0%E5%BD%95/</guid><description>mac iterm 2 share mouse iina (播放器) windows visual nmp</description></item><item><title>mysql</title><link>http://localhost:1313/post/2017/mysql/</link><pubDate>Tue, 26 Sep 2017 15:53:15 +0000</pubDate><guid>http://localhost:1313/post/2017/mysql/</guid><description>macos 初装时修改密码使用 1 SET PASSWORD = PASSWORD(&amp;#39;your_new_password&amp;#39;); 操作服务 1 mysql.server start|restart|stop</description></item><item><title>13. Roman to Integer</title><link>http://localhost:1313/post/2017/13.-roman-to-integer/</link><pubDate>Wed, 20 Sep 2017 14:50:19 +0000</pubDate><guid>http://localhost:1313/post/2017/13.-roman-to-integer/</guid><description>Question Given a roman numeral, convert it to an integer. Input is guaranteed to be within the range from 1 to 3999. Solution 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47</description></item><item><title>Git</title><link>http://localhost:1313/post/2017/git/</link><pubDate>Mon, 11 Sep 2017 11:19:07 +0000</pubDate><guid>http://localhost:1313/post/2017/git/</guid><description>使用 config 配置多个 ssh 地址 在 .ssh路径下新建文件 config 1 2 3 4 Host github.com HostName github.com User git IdentityFile ~/.ssh/id_rsa_github 可以非常方便的配置多个git地址。 新建一个ssh ssh-keygen -t rsa -b 4096 -C &amp;ldquo;your_email@example.com&amp;rdquo; 查看代码</description></item><item><title>9. Palindrome Number</title><link>http://localhost:1313/post/2017/9.-palindrome-number/</link><pubDate>Sat, 09 Sep 2017 15:48:40 +0000</pubDate><guid>http://localhost:1313/post/2017/9.-palindrome-number/</guid><description>Question Determine whether an integer is a palindrome. Do this without extra space. Solution 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 bool isPalindrome(int x) { if (x &amp;lt; 0 || (x % 10 == 0 &amp;amp;&amp;amp; x != 0)) { return false; } int rev = 0; while (x &amp;gt; rev) { rev = rev * 10 + x % 10;</description></item><item><title>7. Reverse Integer</title><link>http://localhost:1313/post/2017/7.-reverse-integer/</link><pubDate>Fri, 08 Sep 2017 18:56:04 +0000</pubDate><guid>http://localhost:1313/post/2017/7.-reverse-integer/</guid><description>Question Reverse digits of an integer. Example1: x = 123, return 321 Example2: x = -123, return -321 Note: The input is assumed to be a 32-bit signed integer. Your function should return 0 when the reversed integer overflows. Solution 1 2 3 4 5 6 7 8 9 10 11 int reverse(int x) { long res = 0; while (x) { res = res * 10 + x %</description></item><item><title>LNMP</title><link>http://localhost:1313/post/2017/lnmp/</link><pubDate>Fri, 08 Sep 2017 18:52:56 +0000</pubDate><guid>http://localhost:1313/post/2017/lnmp/</guid><description>安装命令 nginx 1 ./configure --prefix=/usr/local/nginx --with-http_v2_module --with-http_ssl_module --with-http_gzip_static_module php 1 ./configure --prefix=/usr/local/php --enable-mysqlnd --enable-fpm --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --enable-mbstring --enable-bcmath --with-openssl --with-curl --with-zlib open_basedir 错误提示 1 Warning: require(): open_basedir restriction in effect. File(xxx) is not within the allowed path(s): (/xxx/:/tmp/:/proc/) in /index.php on line 22 错误原因 1 fastcgi_param PHP_ADMIN_VALUE &amp;#34;open_basedir=$document_root/:/tmp/:/proc/&amp;#34;; 解决方法 lnmp安装时自动</description></item><item><title>困倦的午后小记</title><link>http://localhost:1313/post/2017/%E5%9B%B0%E5%80%A6%E7%9A%84%E5%8D%88%E5%90%8E%E5%B0%8F%E8%AE%B0/</link><pubDate>Tue, 05 Sep 2017 15:42:27 +0000</pubDate><guid>http://localhost:1313/post/2017/%E5%9B%B0%E5%80%A6%E7%9A%84%E5%8D%88%E5%90%8E%E5%B0%8F%E8%AE%B0/</guid><description>有时候感叹，智商真是有限，好在感叹还不至于那么频繁。 学习 忙里偷闲，学习了一下 laravel 的 Event (via)，简单的说，逻辑就是在代码里使用 event()触</description></item><item><title>array_map，array_walk，array_filter的区别</title><link>http://localhost:1313/post/2017/array_maparray_walkarray_filter%E7%9A%84%E5%8C%BA%E5%88%AB/</link><pubDate>Tue, 15 Aug 2017 14:17:11 +0000</pubDate><guid>http://localhost:1313/post/2017/array_maparray_walkarray_filter%E7%9A%84%E5%8C%BA%E5%88%AB/</guid><description>https://stackoverflow.com/questions/3432257/difference-between-array-map-array-walk-and-array-filter</description></item><item><title>mysql 主从复制简单实现</title><link>http://localhost:1313/post/2017/mysql-%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/</link><pubDate>Tue, 08 Aug 2017 17:58:26 +0000</pubDate><guid>http://localhost:1313/post/2017/mysql-%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/</guid><description>简介 https://dev.mysql.com/doc/refman/5.7/en/replication.html mysql 的复制，是使一个 mysql 数据库（主库）的数据，复制到一个或多个 mysql 数据库（从库）。基于复制，可以实现很多方案，比如说： 读写分离：将负载分散到</description></item><item><title>test</title><link>http://localhost:1313/post/2017/test/</link><pubDate>Fri, 04 Aug 2017 17:53:10 +0000</pubDate><guid>http://localhost:1313/post/2017/test/</guid><description/></item><item><title>Dota2 Senate</title><link>http://localhost:1313/post/2017/dota2-senate/</link><pubDate>Thu, 03 Aug 2017 16:01:21 +0000</pubDate><guid>http://localhost:1313/post/2017/dota2-senate/</guid><description>Description In the world of Dota2, there are two parties: the Radiant and the Dire. The Dota2 senate consists of senators coming from two parties. Now the senate wants to make a decision about a change in the Dota2 game. The voting for this change is a round-based procedure. In each round, each senator can exercise one of the two rights: Ban one senator's right: A senator can make another</description></item><item><title>使用 xdebug、phpstorm、firefox 调试</title><link>http://localhost:1313/post/2017/%E4%BD%BF%E7%94%A8-xdebugphpstormfirefox-%E8%B0%83%E8%AF%95/</link><pubDate>Sun, 30 Jul 2017 21:11:53 +0000</pubDate><guid>http://localhost:1313/post/2017/%E4%BD%BF%E7%94%A8-xdebugphpstormfirefox-%E8%B0%83%E8%AF%95/</guid><description>开发中调试不可少，对于一个陌生的程序，使用debugger是更加方便的选择。 环境 xdebug 2.5.5 phpstorm 2017.2 firefox 54.0.1 准备工作 xdebug 首先需要安装xdebug扩展，可以在官</description></item><item><title>博客开发记录</title><link>http://localhost:1313/post/2017/%E5%8D%9A%E5%AE%A2%E5%BC%80%E5%8F%91%E8%AE%B0%E5%BD%95/</link><pubDate>Tue, 25 Jul 2017 23:08:38 +0000</pubDate><guid>http://localhost:1313/post/2017/%E5%8D%9A%E5%AE%A2%E5%BC%80%E5%8F%91%E8%AE%B0%E5%BD%95/</guid><description>学习 compass 看了看sass的资料才发现，2007年就有sass了，那时候我还在啃泥巴。compass也是好多年前就有了。 http://compass-style.org/ 用了compass的re</description></item><item><title>SCSS 常用命令</title><link>http://localhost:1313/post/2017/scss-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link><pubDate>Sun, 23 Jul 2017 11:25:52 +0000</pubDate><guid>http://localhost:1313/post/2017/scss-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid><description>命令行編譯; 1 2 3 4 5 6 7 8 9 10 //單文件轉換命令 sass input.scss output.css //單文件監聽命令 sass --watch input.scss:output.css //如果你有很多的sass文件的目錄，你也可以告訴sass監</description></item><item><title>Two Sum</title><link>http://localhost:1313/post/2017/two-sum/</link><pubDate>Sat, 22 Jul 2017 00:01:29 +0000</pubDate><guid>http://localhost:1313/post/2017/two-sum/</guid><description>Given an array of integers, return indices of the two numbers such that they add up to a specific target. You may assume that each input would have exactly one solution, and you may not use the same element twice. Example: Given nums = [2, 7, 11, 15], target = 9, Because nums[0] + nums[1] = 2 + 7 = 9, return [0, 1]. Solution 1 2 3 4 5</description></item><item><title>欣喜溢于言表</title><link>http://localhost:1313/post/2017/%E6%AC%A3%E5%96%9C%E6%BA%A2%E4%BA%8E%E8%A8%80%E8%A1%A8/</link><pubDate>Wed, 19 Jul 2017 22:25:35 +0000</pubDate><guid>http://localhost:1313/post/2017/%E6%AC%A3%E5%96%9C%E6%BA%A2%E4%BA%8E%E8%A8%80%E8%A1%A8/</guid><description>记得最开始是在QQ空间的日志，胡乱写些东西，转写东西。 后来上了大学，开始鼓捣起来，用wordpress搭建了第一个博客，放在虚拟主机上，断断</description></item></channel></rss>